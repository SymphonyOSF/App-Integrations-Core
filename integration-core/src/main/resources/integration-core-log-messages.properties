core.user.get.userid.fail=Failed to retrieve user information. User ID: {0}
core.user.get.username.fail=Failed to retrieve user information. Username: {0}
core.user.get.useremail.fail=Failed to retrieve user information. Email: {0}
core.user.key.store.password.not.found=Keystore password not provided for integration {0}
core.user.key.store.password.not.found.solution=Update the YAML configuration file in order to provide the keystore password for the integration {0}
core.bootstrapcontext.no.integration.found=No integrations found to bootstrap
core.bootstrapcontext.polling.agent.health.check=Polling AGENT health check
core.bootstrapcontext.fail.bootstrap.integration=Fail to bootstrap the integration {0}
core.bootstrapcontext.polling.stopped=Polling stopped
core.bootstrapcontext.polling.stopped.solution=Please check if your connectivity is up and all integration configurations are right.
core.bootstrapcontext.integration.successfully=Integration {0} bootstrapped successfully
core.bootstrapcontext.fail.bootstrap.integration.retrying=Fail to bootstrap the integration {0}, but retrying... 
core.bootstrapcontext.verify.new.integrations=Verify new integrations
core.bootstrapcontext.shutting.down.integration=Shutting down integration {0}
core.integrationlogging.integration.health.status=Integration: {0}, health status: {1}
core.integrationlogging.fail.log.integration.health=Failed to log the {0} Integration Health
core.integrationlogging.application.health.status=Application Health Status: {0}
core.integrationlogging.fail.log.application.health=Failed to log the Application Health
core.integrationlogging.fail.perform.health.logging=Fail to perform the health logging
core.integration.bridge.exception.handler.unable.post.stream=The Integration Bridge was unable to post to stream {0}\
   due to error code {1}
core.integration.bridge.exception.handler.invalid.message=Invalid message posted to stream {0}. Instance: {1}
core.integration.bridge.exception.handler.fail.post.message = Fail to post message
core.integration.bridge.exception.handler.fail.update.streams = Fail to update streams
core.integration.bridge.exception.handler.fail.update.streams.solution = Please check if all streams has been removed from the room
or the instance owner was able to receive notification.
core.integration.bridge.exception.handler.fail.notify.owner= Fail to notify owner
core.integration.bridge.exception.handler.update.instance.notify = User notified about the instance updated
core.integration.bridge.impl.no.configured.streams=No streams configured to instance {0} and configuration {1}
core.integration.bridge.impl.user.posted.message=User {0} posted message to stream {1}
core.integration.bridge.impl.no.streams= There are no streams configured to instance
core.integration.bridge.impl.no.streams.solution = Instance owner should re-configure this instance or remove it from the system.
core.integration.bridge.impl.remote.api.exception.with.result.reason = This instance has \
  been removed from the room, to continue uses it, \
  put this instance back from the room.
core.integration.bridge.impl.remote.api.exception.reason = This instance has \
  been removed from the all rooms, to continue uses it, \
  put this instance back from the rooms.
core.stream.service.impl.error.get.stream.json=Error trying to get streams from JSON Object {0}
core.stream.service.impl.error.get.stream.instance=Error trying to get streams from instance {0}
core.stream.service.impl.error.get.stream.json.solution=Please check if your JSON Object are correct and try again.
core.stream.service.impl.error.get.stream.instance.solution=Please check if stream are correctconfigured for the instance and try again.
core.integration.authorization.repo.api.exception=Error calling external API (SBE).
core.integration.authorization.repo.api.exception.solution=Check if the called SBE instance is working properly.
core.crypto.invalid.parameter=The informed parameter {0} can neither be null nor empty.
core.crypto.invalid.parameter.solution=Inform a non-empty value for {0} parameter.
core.crypto.invalid.encrypted.text=The informed text {0} is not a valid encrypted one.
core.crypto.invalid.encrypted.text.solution= The decoded informed text as Base64 has a length of \
  {0} bytes and should have at least {1}.
core.crypto.no.such.algorithm=The informed algorithm does not exist.
core.crypto.no.such.algorithm.solution=Inform a valid algorithm, {0} does not exist.
core.crypto.invalid.key.spec=The informed key spec is invalid.
core.crypto.invalid.key.spec.solution=Check the informed parameters when creating the {0}.
core.crypto.no.such.padding=The informed padding type does not exist.
core.crypto.no.such.padding.solution=Inform a valid padding type, {0} does not exist.
core.crypto.invalid.key=The informed key is invalid.
core.crypto.invalid.key.solution=Check if the installed provider support the informed key format.
core.crypto.invalid.param.spec=The requested algorithm parameter is invalid.
core.crypto.invalid.param.spec.solution=Make sure the parameter has been properly initialized before using it.
core.crypto.illegal.block.size=Block size found is illegal.
core.crypto.illegal.block.size.solution=Make sure the input length is multiple of {0}.
core.crypto.bad.padding=The text/bytes padding is incorrect.
core.crypto.bad.padding.solution=Check if the informed transformation {0} is correct.
core.crypto.unsupported.encoding=The informed text encoding is not supported.
core.crypto.unsupported.encoding.solution=Inform a supported text encoding, {0} is not.